---
import Layout from '../../layouts/Layout.astro';
import ListaVentasFinalizadas from '../../components/VentasFinalizadas';
import { supabase } from '../../lib/supabase';
import GestionOfertas from '../../components/GestionOfertas';
import ResumenVentasDiarias from '../../components/ResumenVentasDiarias';

// Obtener las ventas finalizadas
const { data: ventas, error } = await supabase
  .from('ordenes')
  .select('*')
  .order('fecha', { ascending: false });

if (error) {
  console.error('Error al obtener las ventas:', error);
}

// Obtener datos para el resumen de ventas diarias
const { data: resumenVentas, error: resumenError } = await supabase
  .rpc('resumen_ventas_diarias');

if (resumenError) {
  console.error('Error al obtener el resumen de ventas:', resumenError);
}

// Obtener ofertas para la gestión
const { data: ofertas, error: ofertasError } = await supabase
  .from('ofertas')
  .select('*');

if (ofertasError) {
  console.error('Error al obtener las ofertas:', ofertasError);
}
---

<Layout title="Panel de Administración">
  <main class="container mx-auto px-4 py-8">
    <div class="mt-8 text-center">
      <a href="/ofertas/ofertas" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
        Volver a Ofertas
      </a>
    </div>
    <h1 class="text-3xl font-bold mb-6 text-white">Panel de Administración</h1>
    <div class="flex flex-wrap -mx-2">
      <div class="w-full md:w-1/3 px-2 mb-4">
        <button id="toggleOfertas" class="bg-gray-500 text-white px-4 py-2 rounded text-2xl font-bold mb-4 h1responsivetext">
          Gestión de Ofertas
        </button>
        <div id="gestionOfertas" >
          <GestionOfertas client:load />
        </div>
      </div>
    <div  class="w-full md:w-1/3 px-2 mb-4">
      <button id="toggleResumen" class="bg-gray-500 text-white px-4 py-2 rounded text-2xl font-bold mb-4 h1responsivetext">Resumen Ventas</button>
      <div id="resumenVentas" >
        <ResumenVentasDiarias client:load />
      </div>
    </div>
    <div class="w-full md:w-1/3 px-2 mb-4">
      <button id="toggleVentasFinalizadas" class="bg-gray-500 text-white px-4 py-2 rounded text-2xl font-bold mb-4 h1responsivetext">Ventas Finalizadas</button>
      <div id="ventasFinalizadas">
        <ListaVentasFinalizadas ventas={ventas || []} client:load />
      </div>
    </div>
  </main>
</Layout>

<!-- Script para manejar la visibilidad de los componentes -->
<script is:inline>
  function toggleVisibility(buttonId, contentId) {
    const button = document.getElementById(buttonId);
    const content = document.getElementById(contentId);
    
    button.addEventListener("click", () => {
      content.classList.toggle("hidden");
      button.textContent = content.classList.contains("hidden") 
        ? button.textContent.replace("Ocultar", "Mostrar") 
        : button.textContent.replace("Mostrar", "Ocultar");
    });
  }

  toggleVisibility("toggleOfertas", "gestionOfertas");
  toggleVisibility("toggleResumen", "resumenVentas");
  toggleVisibility("toggleVentasFinalizadas", "ventasFinalizadas");
</script>

<script>
  import { isLoggedIn } from "../../lib/supabase";

  try {
    // Verificar si el usuario está logueado
    if (!isLoggedIn()) {
      window.location.href = "/admin/admin";
    } else {
      // Obtener el usuario almacenado en localStorage
      const user = localStorage.getItem("user");

      // Validar si el usuario existe y si tiene la propiedad "es_admin"
      if (user) {
        const parsedUser = JSON.parse(user);

        // Verificar si el usuario es administrador
        if (!parsedUser.es_admin) {
          window.location.href = '/admin/admin';
        }
      } else {
        // Si no hay usuario en localStorage, redirigir a login
        window.location.href = "/admin/admin";
      }
    }
  } catch (error) {
    console.log("Error durante la verificación de autenticación:", error);
  }
</script>
